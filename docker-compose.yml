version: '3.1'

services:
  traefik:
    image: traefik:2.9
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --entrypoints.http.address=:80
      - --providers.docker
      - --providers.docker.network=${COMPOSE_PROJECT_NAME}_client
      - --providers.docker.watch=true
      - --providers.docker.exposedbydefault=false
    ports:
      - ${PORT:-80}:80
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN}`)
      - traefik.http.routers.traefik.service=api@internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    volumes:
      - ./.data/mysql:/var/lib/mysql

  api:
    build:
      context: ./api
      dockerfile: ./docker/Dockerfile
    restart: unless-stopped
    working_dir: /srv/api
    volumes:
      - ./api:/srv/api
      - ./api/docker/nginx.conf:/etc/nginx/conf.d/default.conf
    labels:
      - traefik.enable=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-server.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-server.loadbalancer.server.port=80
    links:
      - mysql
    depends_on:
      - traefik
      - mysql

  web:
    image: node:18-alpine
    restart: unless-stopped
    working_dir: /srv/web
    tty: true
    volumes:
      - ./web:/srv/web
    labels:
      - traefik.enable=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-web.rule=Host(`${DOMAIN}`)
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-web.loadbalancer.server.port=3000
    links:
      - api
    depends_on:
      - traefik
      - api
